---
// src/components/TableItem.astro
import link from "../assets/link.svg";
import Reference from "./Reference.astro";

interface Props {
  // TODO: Move to types
  type: "chip" | "reference" | "title";
  ref: boolean;
  bolder: boolean;
  context: string;
}

const { type, ref, bolder, context } = Astro.props;
---

<td class={type === "chip" ? "flex justify-around items-center" : ""}>
  {
    type === "chip" ? (
      <>
        {context.split(",").map((text) => (
          <div class="bg-accent/30 text-accent text-sm px-3 py-1 rounded-full font-semibold hover:bg-accent hover:text-text transition-colors duration-200">
            {text}
          </div>
        ))}
      </>
    ) : (
      <div
        class={`${type === "reference" ? "text-white/80 hover:text-accent relative transition-colors duration-200 underline-animation" : type === "title" ? "text-white font-bold" : ""} ${bolder ? "text-bold" : ""} p-6`}
      >
        {ref ? (
          <>
            <Reference
              icon={link}
              link={context}
              alt={
                context
                  .replace(/(^\w+:|^)\/\//, "")
                  .replace(/^www\./, "")
                  .split("/")[0]
              }
              width={15}
              useAlt
            />
          </>
        ) : (
          <p>{context}</p>
        )}
      </div>
    )
  }
</td>

<style>
  .underline-animation::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 2px;
    background-color: currentColor;
    transform: scaleX(0);
    transform-origin: bottom right;
    transition: transform 0.3s ease;
  }

  .underline-animation:hover::after {
    transform: scaleX(1);
    transform-origin: bottom left;
  }
</style>
