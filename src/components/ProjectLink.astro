---
// src/components/ProjectLink.astro

import type { ProjectLinkProps } from "../types";

const {
  url,
  image,
  topics,
  alt = "Project link",
  flip = true,
} = Astro.props as ProjectLinkProps;
---

<div>
  <a href={url} target="_blank" rel="noopener noreferrer">
    <img
      src={image}
      width={450}
      height={300}
      loading="lazy"
      decoding="async"
      alt={`${alt}: ${url}`}
      class={`rounded single-img ${flip ? "flipped" : ""}`}
    />
  </a>
  <p class=`${flip ? "flex justify-end" : ""} px-5 mt-5`>
    {
      topics
        .split(",")
        .map((topic) => (
          <span class="bg-accent/30 text-accent text-sm text-center px-3 py-1 mx-2 rounded-full font-semibold hover:bg-accent hover:text-text transition-colors duration-200">
            {topic}
          </span>
        ))
    }
  </p>
</div>

<style>
  .single-img {
    box-shadow:
      rgba(155, 156, 159, 0.42) 0px 60px 123px -25px,
      rgba(155, 156, 159, 0.08) 0px 35px 75px -35px;
    transform: perspective(800px) rotateY(25deg) scale(0.8) rotateX(10deg);
    transition:
      transform 0.6s ease,
      box-shadow 0.6s ease;
  }

  .single-img:hover {
    box-shadow: 0px 19px 67px -38px rgba(155, 156, 159, 0.8);
    transform: perspective(800px) rotateY(-15deg) translateY(-50px)
      rotateX(10deg) scale(1);
  }

  .flipped {
    transform: perspective(800px) rotateY(-25deg) scale(0.8) rotateX(10deg);
  }

  .flipped:hover {
    transform: perspective(800px) rotateY(15deg) translateY(-50px)
      rotateX(10deg) scale(1);
  }
</style>
